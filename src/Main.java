public class Main {
    public static void main(String[] args) {
        /* Task 1
        Объявите три массива:
        1. Целочисленный массив, заполненный тремя цифрами – 1, 2 и 3 – с помощью ключевого слова new.
            - Подсказка
                //объявление массива из 12-ти элементов, заполненного нулями
                int [] weight = new int [12];
        2. Массив, в котором можно хранить три дробных числа – 1.57, 7.654, 9.986 –  сразу заполнив его значениями.
            - Подсказка
                //объявление целочисленного массива, заполненного 12 элементами
                int [] weight = {90, 91, 93, 92, 85, 87, 84, 83, 0, 0, 0, 0};
        3. Произвольный массив – тип и количество данных определите сами. Самостоятельно выберите способ создания массива:
        с помощью ключевого слова или сразу заполненный элементами.
         */

        int[] firstArray = new int[] {1, 2, 3};
        double[] secondArray = new double[] {1.57, 7.654, 9.986};
        int[] thirdArray = {1, 2, 3, 4, 5};

        /* Task 2
        Пройдите по каждому из трех массивов и распечатайте все элементы всех трех массивов,
        начиная с первого элемента, через запятую. Запятая между последним элементом одного
        массива и первым элементом следующего не нужна.
         */
        for (int i = 0; i < firstArray.length; i++) {
            if(i != firstArray.length-1){
                System.out.print(firstArray[i] + ", ");
            }else System.out.println(firstArray[i]);
        }
        for (int i = 0; i < secondArray.length; i++) {
            if(i != secondArray.length-1){
                System.out.print(secondArray[i] + ", ");
            }else System.out.println(secondArray[i]);
        }
        for (int i = 0; i < thirdArray.length; i++) {
            if(i != thirdArray.length-1){
                System.out.print(thirdArray[i] + ", ");
            }else System.out.println(thirdArray[i]);
        }

        /* Task 3
        Теперь ваша задача – распечатать все элементы всех трех массивов, но начинать нужно
        не с первого элемента массива, а с последнего. Элементы должны быть распечатаны через
        запятую, при этом элементы одного массива располагаются на одной строчке, а элементы другого массива – на другой.
        Запятая между последним элементом одного массива и первым элементом следующего не нужна.
        Если во втором задании в консоль у вас вывелся результат
        1, 2, 3
        1.57, 7.654, 9.986
        *произвольные элементы третьего массива*
        То в третьем задании результат должен быть
         3, 2, 1
        9.986, 7.654, 1.57
        *произвольные элементы третьего массива в обратном порядке*
         */
        for (int i = firstArray.length -1; i >= 0; i--) {
            if(i != 0){
                System.out.print(firstArray[i] + ", ");
            }else System.out.println(firstArray[i]);
        }
        for (int i = secondArray.length -1; i >= 0; i--) {
            if(i != 0){
                System.out.print(secondArray[i] + ", ");
            }else System.out.println(secondArray[i]);
        }
        for (int i = thirdArray.length -1; i >= 0; i--) {
            if(i != 0){
                System.out.print(thirdArray[i] + ", ");
            }else System.out.println(thirdArray[i]);
        }

        /* Task 4
        Пройдитесь по первому целочисленному массиву и все нечетные числа в нем сделайте четными (нужно прибавить 1).
        Важно: код должен работать с любым целочисленным массивом, поэтому для решения задания вам нужно использовать циклы.
        Распечатайте результат преобразования в консоль.
         */
        for (int i = 0; i < firstArray.length; i++) {
            if (i % 2 == 0){
                firstArray[i] += 1;
            }
            System.out.print(firstArray[i] + "\t");
        }
    }
}